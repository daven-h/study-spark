{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/davenhill/dev/study-spark/src/types/settings.ts"],"sourcesContent":["export interface Settings{\nworkMin: number; // duration of work sessions\nshortBreak: number; // short break duration in minutes\nlongBreak: number; //extended break after cycles\ncyclesToLong: number; // number of cycles before a long break\nattentionThresholdSec: number; // how many seconds of being unfocused before alert triggers\nyawMax: number; // maximum head rotation before considered unfocused\npitchMax: number; // maximum head tilt (vertically) before considered unfocused\nadaptiveEnabled: boolean, //enable disable pomo\nblockedSites: string[]; // sites considered unfocused (youtube,reddit, twitter)\n}\n\nexport const DEFAULT_SETTINGS: Settings = {\n    workMin: 25,\n  shortBreak: 5,\n  longBreak: 15,\n  cyclesToLong: 4,\n  attentionThresholdSec: 30,\n  yawMax: 30,\n  pitchMax: 30,\n  adaptiveEnabled: false,\n  blockedSites: [],\n}\n"],"names":[],"mappings":";;;;AAYO,MAAM,mBAA6B;IACtC,SAAS;IACX,YAAY;IACZ,WAAW;IACX,cAAc;IACd,uBAAuB;IACvB,QAAQ;IACR,UAAU;IACV,iBAAiB;IACjB,cAAc,EAAE;AAClB","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/davenhill/dev/study-spark/src/store/settingsStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { Settings, DEFAULT_SETTINGS } from '@/types/settings';\n\ninterface SettingsState extends Settings {\n  updateSettings: (updates: Partial<Settings>) => void;\n  resetSettings: () => void;\n}\n\nexport const useSettingsStore = create<SettingsState>()(\n  persist(\n    (set) => ({\n      ...DEFAULT_SETTINGS,\n      \n      updateSettings: (updates) => set((state) => ({\n        ...state,\n        ...updates,\n      })),\n      \n      resetSettings: () => set(DEFAULT_SETTINGS),\n    }),\n    {\n      name: 'settings-storage',\n    }\n  )\n);"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAOO,MAAM,mBAAmB,IAAA,2KAAM,IACpC,IAAA,iLAAO,EACL,CAAC,MAAQ,CAAC;QACR,GAAG,qKAAgB;QAEnB,gBAAgB,CAAC,UAAY,IAAI,CAAC,QAAU,CAAC;oBAC3C,GAAG,KAAK;oBACR,GAAG,OAAO;gBACZ,CAAC;QAED,eAAe,IAAM,IAAI,qKAAgB;IAC3C,CAAC,GACD;IACE,MAAM;AACR","debugId":null}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/davenhill/dev/study-spark/src/store/sessionStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { Session, SessionStats } from '@/types/session';\n\ninterface SessionState {\n  sessions: Session[];\n  currentAttentionTimeline: number[]; // Build this during active session\n  \n  // Actions\n  addSession: (session: Omit<Session, 'id' | 'createdAt' | 'updatedAt'>) => void;\n  recordAttention: (score: number) => void; // Called every second during work\n  clearCurrentTimeline: () => void;\n  getSessionsByDate: (date: string) => Session[];\n  getSessionStats: (sessionId: string) => SessionStats | null;\n  getTodayStats: () => SessionStats;\n}\n\nexport const useSessionStore = create<SessionState>()(\n  persist(\n    (set, get) => ({\n      sessions: [],\n      currentAttentionTimeline: [],\n\n      addSession: (sessionData) => {\n        const newSession: Session = {\n          ...sessionData,\n          id: crypto.randomUUID(),\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString(),\n        };\n\n        set((state) => ({\n          sessions: [...state.sessions, newSession],\n        }));\n      },\n\n      recordAttention: (score) => {\n        set((state) => ({\n          currentAttentionTimeline: [...state.currentAttentionTimeline, score],\n        }));\n      },\n\n      clearCurrentTimeline: () => {\n        set({ currentAttentionTimeline: [] });\n      },\n\n      getSessionsByDate: (date) => {\n        const { sessions } = get();\n        return sessions.filter((session) => session.date.startsWith(date));\n      },\n\n      getSessionStats: (sessionId) => {\n        const { sessions } = get();\n        const session = sessions.find((s) => s.id === sessionId);\n        \n        if (!session || session.attentionTimeline.length === 0) {\n          return null;\n        }\n\n        return calculateSessionStats(session);\n      },\n\n      getTodayStats: () => {\n        const { sessions } = get();\n        const today = new Date().toISOString().split('T')[0];\n        const todaySessions = sessions.filter((s) => s.date.startsWith(today));\n\n        if (todaySessions.length === 0) {\n          return {\n            totalFocusTime: 0,\n            cyclesCompleted: 0,\n            attentionScore: 0,\n            mostDistractedMinute: null,\n          };\n        }\n\n        // Aggregate stats from all today's sessions\n        const totalFocusTime = todaySessions.reduce(\n          (sum, s) => sum + s.workMinutes,\n          0\n        );\n        const cyclesCompleted = todaySessions.length;\n\n        // Calculate average attention across all sessions\n        const allScores = todaySessions.flatMap((s) => s.attentionTimeline);\n        const avgAttention =\n          allScores.length > 0\n            ? allScores.reduce((sum, score) => sum + score, 0) / allScores.length\n            : 0;\n\n        return {\n          totalFocusTime,\n          cyclesCompleted,\n          attentionScore: Math.round(avgAttention * 100),\n          mostDistractedMinute: null, // Can implement later\n        };\n      },\n    }),\n    {\n      name: 'session-storage',\n    }\n  )\n);\n\n/**\n * Calculate stats for a single session\n */\nfunction calculateSessionStats(session: Session): SessionStats {\n  const { attentionTimeline, workMinutes } = session;\n\n  // Average attention score\n  const avgAttention =\n    attentionTimeline.reduce((sum, score) => sum + score, 0) /\n    attentionTimeline.length;\n\n  // Find most distracted minute\n  let mostDistractedMinute: number | null = null;\n  let lowestAvg = 1;\n\n  // Group by minute and find lowest\n  for (let min = 0; min < workMinutes; min++) {\n    const startIdx = min * 60;\n    const endIdx = Math.min(startIdx + 60, attentionTimeline.length);\n    const minuteScores = attentionTimeline.slice(startIdx, endIdx);\n\n    if (minuteScores.length > 0) {\n      const minuteAvg =\n        minuteScores.reduce((sum, score) => sum + score, 0) / minuteScores.length;\n\n      if (minuteAvg < lowestAvg) {\n        lowestAvg = minuteAvg;\n        mostDistractedMinute = min;\n      }\n    }\n  }\n\n  return {\n    totalFocusTime: workMinutes,\n    cyclesCompleted: 1,\n    attentionScore: Math.round(avgAttention * 100),\n    mostDistractedMinute,\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///Users/davenhill/dev/study-spark/src/store/pomodoroStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { PomodoroState, TimerPhase, TimerStatus } from '@/types/pomodoro';\nimport { useSettingsStore } from './settingsStore';\nimport { useSessionStore } from './sessionStore';\n\ninterface PomodoroStore extends PomodoroState {\n  // Actions\n  startTimer: (taskId?: string) => void;\n  pauseTimer: () => void;\n  resumeTimer: () => void;\n  skipPhase: () => void;\n  resetTimer: () => void;\n  tick: () => void; // Called every second\n  \n  // Internal\n  intervalId: number | null;\n}\n\nexport const usePomodoroStore = create<PomodoroStore>((set, get) => ({\n  // Initial state\n  phase: 'idle',\n  status: 'idle',\n  timeRemaining: 0,\n  cyclesCompleted: 0,\n  currentTaskId: null,\n  intervalId: null,\n\n  startTimer: (taskId) => {\n    const settings = useSettingsStore.getState();\n    const { intervalId } = get();\n    \n    // Clear any existing interval\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n\n    // Start work phase\n    const newIntervalId = window.setInterval(() => {\n      get().tick();\n    }, 1000);\n\n    set({\n      phase: 'work',\n      status: 'running',\n      timeRemaining: settings.workMin * 60,\n      currentTaskId: taskId || null,\n      intervalId: newIntervalId,\n    });\n  },\n\n  pauseTimer: () => {\n    const { intervalId } = get();\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n    set({ status: 'paused', intervalId: null });\n  },\n\n  resumeTimer: () => {\n    const { status } = get();\n    if (status !== 'paused') return;\n\n    const newIntervalId = window.setInterval(() => {\n      get().tick();\n    }, 1000);\n\n    set({ status: 'running', intervalId: newIntervalId });\n  },\n\n  skipPhase: () => {\n    // Force move to next phase\n    set({ timeRemaining: 0 });\n    get().tick();\n  },\n\n  resetTimer: () => {\n    const { intervalId } = get();\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n    \n    set({\n      phase: 'idle',\n      status: 'idle',\n      timeRemaining: 0,\n      cyclesCompleted: 0,\n      currentTaskId: null,\n      intervalId: null,\n    });\n  },\n\n  tick: () => {\n    const state = get();\n    const settings = useSettingsStore.getState();\n\n    if (state.status !== 'running') return;\n\n    // Countdown\n    if (state.timeRemaining > 0) {\n      set({ timeRemaining: state.timeRemaining - 1 });\n      return;\n    }\n\n    // Phase completed - determine next phase\n    let nextPhase: TimerPhase;\n    let nextDuration: number;\n    let newCyclesCompleted = state.cyclesCompleted;\n\n    if (state.phase === 'work') {\n      // Work completed\n\n      const sessionStore = useSessionStore.getState();\n\n      sessionStore.addSession({\n        taskId: state.currentTaskId,\n        date: new Date().toISOString().split('T')[0],\n        workMinutes: settings.workMin,\n        breakMinutes: 0,\n        attentionTimeline: sessionStore.currentAttentionTimeline,\n      });\n\n      sessionStore.clearCurrentTimeline();\n\n\n      newCyclesCompleted += 1;\n      \n      // Long break after cyclesToLong cycles, otherwise short break\n      if (newCyclesCompleted % settings.cyclesToLong === 0) {\n        nextPhase = 'longBreak';\n        nextDuration = settings.longBreak * 60;\n      } else {\n        nextPhase = 'shortBreak';\n        nextDuration = settings.shortBreak * 60;\n      }\n    } else {\n      // Break completed - back to work\n      nextPhase = 'work';\n      nextDuration = settings.workMin * 60;\n    }\n\n    // TODO: Play sound notification here\n    // TODO: Log session to sessionStore here\n\n    set({\n      phase: nextPhase,\n      timeRemaining: nextDuration,\n      cyclesCompleted: newCyclesCompleted,\n    });\n  },\n}));"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;;;;AAeO,MAAM,mBAAmB,IAAA,2KAAM,EAAgB,CAAC,KAAK,MAAQ,CAAC;QACnE,gBAAgB;QAChB,OAAO;QACP,QAAQ;QACR,eAAe;QACf,iBAAiB;QACjB,eAAe;QACf,YAAY;QAEZ,YAAY,CAAC;YACX,MAAM,WAAW,0KAAgB,CAAC,QAAQ;YAC1C,MAAM,EAAE,UAAU,EAAE,GAAG;YAEvB,8BAA8B;YAC9B,IAAI,YAAY;gBACd,cAAc;YAChB;YAEA,mBAAmB;YACnB,MAAM,gBAAgB,OAAO,WAAW,CAAC;gBACvC,MAAM,IAAI;YACZ,GAAG;YAEH,IAAI;gBACF,OAAO;gBACP,QAAQ;gBACR,eAAe,SAAS,OAAO,GAAG;gBAClC,eAAe,UAAU;gBACzB,YAAY;YACd;QACF;QAEA,YAAY;YACV,MAAM,EAAE,UAAU,EAAE,GAAG;YACvB,IAAI,YAAY;gBACd,cAAc;YAChB;YACA,IAAI;gBAAE,QAAQ;gBAAU,YAAY;YAAK;QAC3C;QAEA,aAAa;YACX,MAAM,EAAE,MAAM,EAAE,GAAG;YACnB,IAAI,WAAW,UAAU;YAEzB,MAAM,gBAAgB,OAAO,WAAW,CAAC;gBACvC,MAAM,IAAI;YACZ,GAAG;YAEH,IAAI;gBAAE,QAAQ;gBAAW,YAAY;YAAc;QACrD;QAEA,WAAW;YACT,2BAA2B;YAC3B,IAAI;gBAAE,eAAe;YAAE;YACvB,MAAM,IAAI;QACZ;QAEA,YAAY;YACV,MAAM,EAAE,UAAU,EAAE,GAAG;YACvB,IAAI,YAAY;gBACd,cAAc;YAChB;YAEA,IAAI;gBACF,OAAO;gBACP,QAAQ;gBACR,eAAe;gBACf,iBAAiB;gBACjB,eAAe;gBACf,YAAY;YACd;QACF;QAEA,MAAM;YACJ,MAAM,QAAQ;YACd,MAAM,WAAW,0KAAgB,CAAC,QAAQ;YAE1C,IAAI,MAAM,MAAM,KAAK,WAAW;YAEhC,YAAY;YACZ,IAAI,MAAM,aAAa,GAAG,GAAG;gBAC3B,IAAI;oBAAE,eAAe,MAAM,aAAa,GAAG;gBAAE;gBAC7C;YACF;YAEA,yCAAyC;YACzC,IAAI;YACJ,IAAI;YACJ,IAAI,qBAAqB,MAAM,eAAe;YAE9C,IAAI,MAAM,KAAK,KAAK,QAAQ;gBAC1B,iBAAiB;gBAEjB,MAAM,eAAe,wKAAe,CAAC,QAAQ;gBAE7C,aAAa,UAAU,CAAC;oBACtB,QAAQ,MAAM,aAAa;oBAC3B,MAAM,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;oBAC5C,aAAa,SAAS,OAAO;oBAC7B,cAAc;oBACd,mBAAmB,aAAa,wBAAwB;gBAC1D;gBAEA,aAAa,oBAAoB;gBAGjC,sBAAsB;gBAEtB,8DAA8D;gBAC9D,IAAI,qBAAqB,SAAS,YAAY,KAAK,GAAG;oBACpD,YAAY;oBACZ,eAAe,SAAS,SAAS,GAAG;gBACtC,OAAO;oBACL,YAAY;oBACZ,eAAe,SAAS,UAAU,GAAG;gBACvC;YACF,OAAO;gBACL,iCAAiC;gBACjC,YAAY;gBACZ,eAAe,SAAS,OAAO,GAAG;YACpC;YAEA,qCAAqC;YACrC,yCAAyC;YAEzC,IAAI;gBACF,OAAO;gBACP,eAAe;gBACf,iBAAiB;YACnB;QACF;IACF,CAAC","debugId":null}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file:///Users/davenhill/dev/study-spark/src/hooks/usePomodoroTest.ts"],"sourcesContent":["'use client';\n\nimport { useEffect } from 'react';\nimport { usePomodoroStore } from '@/store/pomodoroStore';\nimport { useSessionStore } from '@/store/sessionStore';\nimport { useSettingsStore } from '@/store/settingsStore';\n\n/**\n * Test hook to simulate a full Pomodoro cycle with fake attention data\n * This helps test the timer + session logging without needing face detection\n */\nexport function usePomodoroTest() {\n  const pomodoro = usePomodoroStore();\n  const session = useSessionStore();\n  const settings = useSettingsStore();\n\n  // Simulate attention tracking during work phases\n  useEffect(() => {\n    if (pomodoro.status !== 'running' || pomodoro.phase !== 'work') {\n      return;\n    }\n\n    // Record fake attention score every second\n    const interval = setInterval(() => {\n      // Generate random attention score between 0.7 and 1.0\n      const fakeAttentionScore = 0.7 + Math.random() * 0.3;\n      session.recordAttention(fakeAttentionScore);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [pomodoro.status, pomodoro.phase, session]);\n\n  return {\n    // Pomodoro controls\n    startTimer: pomodoro.startTimer,\n    pauseTimer: pomodoro.pauseTimer,\n    resumeTimer: pomodoro.resumeTimer,\n    skipPhase: pomodoro.skipPhase,\n    resetTimer: pomodoro.resetTimer,\n\n    // Current state\n    phase: pomodoro.phase,\n    status: pomodoro.status,\n    timeRemaining: pomodoro.timeRemaining,\n    cyclesCompleted: pomodoro.cyclesCompleted,\n\n    // Session data\n    sessions: session.sessions,\n    todayStats: session.getTodayStats(),\n\n    // Settings\n    settings: settings,\n    updateSettings: settings.updateSettings,\n\n    // Helpers for testing\n    simulateFullCycle: () => {\n      // Speed up timer for testing (5 second work, 2 second break)\n      settings.updateSettings({\n        workMin: 0.083, // 5 seconds\n        shortBreak: 0.033, // 2 seconds\n        longBreak: 0.05, // 3 seconds\n      });\n      pomodoro.startTimer('test-task-123');\n    },\n\n    resetToDefaults: () => {\n      pomodoro.resetTimer();\n      settings.resetSettings();\n    },\n  };\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;AAWO,SAAS;IACd,MAAM,WAAW,IAAA,0KAAgB;IACjC,MAAM,UAAU,IAAA,wKAAe;IAC/B,MAAM,WAAW,IAAA,0KAAgB;IAEjC,iDAAiD;IACjD,IAAA,2OAAS,EAAC;QACR,IAAI,SAAS,MAAM,KAAK,aAAa,SAAS,KAAK,KAAK,QAAQ;YAC9D;QACF;QAEA,2CAA2C;QAC3C,MAAM,WAAW,YAAY;YAC3B,sDAAsD;YACtD,MAAM,qBAAqB,MAAM,KAAK,MAAM,KAAK;YACjD,QAAQ,eAAe,CAAC;QAC1B,GAAG;QAEH,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC,SAAS,MAAM;QAAE,SAAS,KAAK;QAAE;KAAQ;IAE7C,OAAO;QACL,oBAAoB;QACpB,YAAY,SAAS,UAAU;QAC/B,YAAY,SAAS,UAAU;QAC/B,aAAa,SAAS,WAAW;QACjC,WAAW,SAAS,SAAS;QAC7B,YAAY,SAAS,UAAU;QAE/B,gBAAgB;QAChB,OAAO,SAAS,KAAK;QACrB,QAAQ,SAAS,MAAM;QACvB,eAAe,SAAS,aAAa;QACrC,iBAAiB,SAAS,eAAe;QAEzC,eAAe;QACf,UAAU,QAAQ,QAAQ;QAC1B,YAAY,QAAQ,aAAa;QAEjC,WAAW;QACX,UAAU;QACV,gBAAgB,SAAS,cAAc;QAEvC,sBAAsB;QACtB,mBAAmB;YACjB,6DAA6D;YAC7D,SAAS,cAAc,CAAC;gBACtB,SAAS;gBACT,YAAY;gBACZ,WAAW;YACb;YACA,SAAS,UAAU,CAAC;QACtB;QAEA,iBAAiB;YACf,SAAS,UAAU;YACnB,SAAS,aAAa;QACxB;IACF;AACF","debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///Users/davenhill/dev/study-spark/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,+LAAO,EAAC,IAAA,sKAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///Users/davenhill/dev/study-spark/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,gMAAG,EACxB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,4OAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,iMAAI,GAAG;IAC9B,qBACE,uQAAC;QACC,WAAW,IAAA,kJAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///Users/davenhill/dev/study-spark/src/lib/pomodoro/timer.ts"],"sourcesContent":["/**\n * Convert seconds to MM:SS format\n */\nexport function formatTime(seconds: number): string {\n  const mins = Math.floor(seconds / 60);\n  const secs = seconds % 60;\n  return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n}\n\n/**\n * Get progress percentage (0-100)\n */\nexport function getProgress(timeRemaining: number, totalTime: number): number {\n  if (totalTime === 0) return 0;\n  return ((totalTime - timeRemaining) / totalTime) * 100;\n}\n\n/**\n * Get phase display name\n */\nexport function getPhaseLabel(phase: string): string {\n  switch (phase) {\n    case 'work':\n      return 'Focus Time';\n    case 'shortBreak':\n      return 'Short Break';\n    case 'longBreak':\n      return 'Long Break';\n    default:\n      return 'Ready';\n  }\n}\n\n/**\n * Calculate total duration for a phase in seconds\n */\nexport function getPhaseDuration(\n  phase: string,\n  settings: { workMin: number; shortBreak: number; longBreak: number }\n): number {\n  switch (phase) {\n    case 'work':\n      return settings.workMin * 60;\n    case 'shortBreak':\n      return settings.shortBreak * 60;\n    case 'longBreak':\n      return settings.longBreak * 60;\n    default:\n      return 0;\n  }\n}"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;;;AACM,SAAS,WAAW,OAAe;IACxC,MAAM,OAAO,KAAK,KAAK,CAAC,UAAU;IAClC,MAAM,OAAO,UAAU;IACvB,OAAO,GAAG,KAAK,QAAQ,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,KAAK,QAAQ,GAAG,QAAQ,CAAC,GAAG,MAAM;AAClF;AAKO,SAAS,YAAY,aAAqB,EAAE,SAAiB;IAClE,IAAI,cAAc,GAAG,OAAO;IAC5B,OAAO,AAAC,CAAC,YAAY,aAAa,IAAI,YAAa;AACrD;AAKO,SAAS,cAAc,KAAa;IACzC,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAKO,SAAS,iBACd,KAAa,EACb,QAAoE;IAEpE,OAAQ;QACN,KAAK;YACH,OAAO,SAAS,OAAO,GAAG;QAC5B,KAAK;YACH,OAAO,SAAS,UAAU,GAAG;QAC/B,KAAK;YACH,OAAO,SAAS,SAAS,GAAG;QAC9B;YACE,OAAO;IACX;AACF","debugId":null}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":["file:///Users/davenhill/dev/study-spark/src/app/test/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { usePomodoroTest } from '@/hooks/usePomodoroTest';\nimport { Button } from '@/components/ui/button';\nimport { formatTime } from '@/lib/pomodoro/timer';\n\nexport default function TestPage() {\n  const {\n    // Controls\n    startTimer,\n    pauseTimer,\n    resumeTimer,\n    skipPhase,\n    resetTimer,\n    \n    // State\n    phase,\n    status,\n    timeRemaining,\n    cyclesCompleted,\n    \n    // Data\n    sessions,\n    todayStats,\n    settings,\n  } = usePomodoroTest();\n\n  return (\n    <main className=\"container max-w-4xl mx-auto py-8 px-4\">\n      <h1 className=\"text-3xl font-bold mb-8\">Pomodoro Test Page</h1>\n\n      {/* Timer Display */}\n      <div className=\"bg-gray-100 p-8 rounded-lg mb-6\">\n        <div className=\"text-center\">\n          <p className=\"text-sm text-gray-600 mb-2\">Phase</p>\n          <p className=\"text-2xl font-bold mb-4 capitalize\">{phase}</p>\n          \n          <p className=\"text-sm text-gray-600 mb-2\">Time Remaining</p>\n          <p className=\"text-6xl font-bold mb-4 font-mono\">{formatTime(timeRemaining)}</p>\n          \n          <p className=\"text-sm text-gray-600 mb-2\">Status</p>\n          <p className=\"text-xl font-semibold capitalize mb-4\">{status}</p>\n          \n          <p className=\"text-sm text-gray-600 mb-2\">Cycles Completed</p>\n          <p className=\"text-xl font-semibold\">{cyclesCompleted}</p>\n        </div>\n      </div>\n\n      {/* Controls */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3 mb-6\">\n        <Button onClick={() => startTimer('test-task')} disabled={status === 'running'}>\n          Start Timer\n        </Button>\n        <Button onClick={pauseTimer} disabled={status !== 'running'}>\n          Pause\n        </Button>\n        <Button onClick={resumeTimer} disabled={status !== 'paused'}>\n          Resume\n        </Button>\n        <Button onClick={skipPhase} disabled={status === 'idle'}>\n          Skip Phase\n        </Button>\n      </div>\n\n      <div className=\"mb-6\">\n        <Button onClick={resetTimer} variant=\"destructive\" className=\"w-full\">\n          Reset Timer\n        </Button>\n      </div>\n\n      {/* Today's Stats */}\n      <div className=\"bg-blue-50 p-6 rounded-lg mb-6\">\n        <h2 className=\"text-xl font-bold mb-4\">Today&apos;s Stats</h2>\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <div>\n            <p className=\"text-sm text-gray-600\">Total Focus Time</p>\n            <p className=\"text-2xl font-bold\">{todayStats.totalFocusTime}m</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-600\">Cycles Completed</p>\n            <p className=\"text-2xl font-bold\">{todayStats.cyclesCompleted}</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-600\">Attention Score</p>\n            <p className=\"text-2xl font-bold\">{todayStats.attentionScore}%</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-600\">Most Distracted</p>\n            <p className=\"text-2xl font-bold\">\n              {todayStats.mostDistractedMinute !== null \n                ? `Min ${todayStats.mostDistractedMinute}` \n                : 'N/A'}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Current Settings */}\n      <div className=\"bg-gray-50 p-6 rounded-lg mb-6\">\n        <h2 className=\"text-xl font-bold mb-4\">Current Settings</h2>\n        <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 text-sm\">\n          <div>\n            <p className=\"text-gray-600\">Work Duration</p>\n            <p className=\"font-semibold\">{settings.workMin} min</p>\n          </div>\n          <div>\n            <p className=\"text-gray-600\">Short Break</p>\n            <p className=\"font-semibold\">{settings.shortBreak} min</p>\n          </div>\n          <div>\n            <p className=\"text-gray-600\">Long Break</p>\n            <p className=\"font-semibold\">{settings.longBreak} min</p>\n          </div>\n          <div>\n            <p className=\"text-gray-600\">Cycles to Long</p>\n            <p className=\"font-semibold\">{settings.cyclesToLong}</p>\n          </div>\n          <div>\n            <p className=\"text-gray-600\">Adaptive</p>\n            <p className=\"font-semibold\">{settings.adaptiveEnabled ? 'On' : 'Off'}</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Session History */}\n      <div className=\"bg-white border rounded-lg p-6\">\n        <h2 className=\"text-xl font-bold mb-4\">Session History ({sessions.length})</h2>\n        {sessions.length === 0 ? (\n          <p className=\"text-gray-500\">No sessions yet. Complete a work session to see data here.</p>\n        ) : (\n          <div className=\"space-y-3\">\n            {sessions.slice(-10).reverse().map((session) => (\n              <div key={session.id} className=\"border-l-4 border-blue-500 pl-4 py-2\">\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <p className=\"font-semibold\">\n                      {new Date(session.date).toLocaleString()}\n                    </p>\n                    <p className=\"text-sm text-gray-600\">\n                      Work: {session.workMinutes}m | \n                      Task ID: {session.taskId || 'None'}\n                    </p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-sm text-gray-600\">Attention Data</p>\n                    <p className=\"font-semibold\">\n                      {session.attentionTimeline.length} samples\n                    </p>\n                    <p className=\"text-sm\">\n                      Avg: {Math.round(\n                        (session.attentionTimeline.reduce((a, b) => a + b, 0) / \n                        session.attentionTimeline.length) * 100\n                      )}%\n                    </p>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Instructions */}\n      <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded\">\n        <h3 className=\"font-bold mb-2\">Testing Instructions:</h3>\n        <ol className=\"list-decimal list-inside space-y-1 text-sm\">\n          <li>Click &quot;Start Timer&quot; to begin a work session</li>\n          <li>Use &quot;Skip Phase&quot; to fast-forward through phases</li>\n          <li>Check &quot;Session History&quot; after completing work sessions</li>\n          <li>Verify attention data is being recorded automatically</li>\n          <li>Test Pause/Resume functionality</li>\n        </ol>\n      </div>\n    </main>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}