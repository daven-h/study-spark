{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/anishaandapally/Desktop/knighthacks25/study-spark/src/app/focus/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useAppStore } from '@/store/app-store';\nimport { Button } from '@/components/ui/button';\nimport FocusAlert from '@/components/FocusAlert';\n\ninterface AttentionData {\n  attention_score: number;\n  eye_ar: number;\n  mouth_ar: number;\n  head_tilt: number;\n  phone_detected: boolean;\n  fps: number;\n  timestamp: number;\n  focus_status: string;\n  session_active: boolean;\n}\n\nexport default function FocusSessionPage() {\n  const router = useRouter();\n  const { addSession, lastMethod } = useAppStore();\n  const [isSessionActive, setIsSessionActive] = useState(false);\n  const [sessionDuration, setSessionDuration] = useState(0);\n  const [sessionStartTime, setSessionStartTime] = useState<number | null>(null);\n  const [isClient, setIsClient] = useState(false);\n  const [attentionData, setAttentionData] = useState<AttentionData>({\n    attention_score: 0,\n    eye_ar: 0,\n    mouth_ar: 0,\n    head_tilt: 0,\n    phone_detected: false,\n    fps: 0,\n    timestamp: 0,\n    focus_status: 'unknown',\n    session_active: false\n  });\n  const [websocketConnected, setWebsocketConnected] = useState(false);\n  const [apiConnected, setApiConnected] = useState(false);\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const streamRef = useRef<MediaStream | null>(null);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const websocketRef = useRef<WebSocket | null>(null);\n  const pollingRef = useRef<NodeJS.Timeout | null>(null);\n\n  // Set client-side flag to prevent hydration issues\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  // Connect to HTTP API server\n  useEffect(() => {\n    if (isClient) {\n      connectToAPI();\n    }\n    return () => {\n      disconnectFromAPI();\n    };\n  }, [isClient]);\n\n  // Start camera when component mounts\n  useEffect(() => {\n    if (isClient) {\n      startCamera();\n    }\n    return () => {\n      stopCamera();\n    };\n  }, [isClient]);\n\n  const connectToAPI = async () => {\n    try {\n      const response = await fetch('http://localhost:8765/api/ping');\n      if (response.ok) {\n        setApiConnected(true);\n        console.log('API server connected');\n      } else {\n        setApiConnected(false);\n        console.log('API server not responding');\n      }\n    } catch (error) {\n      console.error('Failed to connect to API:', error);\n      setApiConnected(false);\n    }\n  };\n\n  const disconnectFromAPI = () => {\n    if (pollingRef.current) {\n      clearInterval(pollingRef.current);\n      pollingRef.current = null;\n    }\n    setApiConnected(false);\n  };\n\n  const sendAPICommand = async (command: string) => {\n    if (!apiConnected) return;\n    \n    try {\n      const endpoint = command === 'start_tracking' ? 'start_tracking' : \n                     command === 'stop_tracking' ? 'stop_tracking' : 'ping';\n      \n      const response = await fetch(`http://localhost:8765/api/${endpoint}`, {\n        method: endpoint === 'ping' ? 'GET' : 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        console.log(`API command ${command}:`, data);\n        return data;\n      }\n    } catch (error) {\n      console.error(`API command ${command} failed:`, error);\n    }\n  };\n\n  const pollAttentionData = () => {\n    if (!apiConnected) return;\n    \n    const poll = async () => {\n      try {\n        const response = await fetch('http://localhost:8765/api/attention_data', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n        if (response.ok) {\n          const data = await response.json();\n          if (data.success) {\n            setAttentionData(data.data);\n          }\n        } else {\n          console.error('API responded with error:', response.status);\n        }\n      } catch (error) {\n        console.error('Failed to poll attention data:', error);\n        // Don't spam the console with errors\n        if (Math.random() < 0.1) { // Only log 10% of errors\n          console.error('Polling error:', error);\n        }\n      }\n    };\n    \n    // Poll every 100ms (10 Hz)\n    pollingRef.current = setInterval(poll, 100);\n  };\n\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: { ideal: 1280 },\n          height: { ideal: 720 },\n          facingMode: 'user'\n        }\n      });\n      \n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        streamRef.current = stream;\n      }\n    } catch (error) {\n      console.error('Error accessing camera:', error);\n      // Fallback: show a placeholder or message\n    }\n  };\n\n  const stopCamera = () => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n  };\n\n  const startSession = async () => {\n    setIsSessionActive(true);\n    const startTime = Date.now();\n    setSessionStartTime(startTime);\n    setSessionDuration(0);\n    \n    // Start attention tracking via API\n    await sendAPICommand('start_tracking');\n    pollAttentionData();\n    \n    // Start timer\n    intervalRef.current = setInterval(() => {\n      setSessionDuration(Math.floor((Date.now() - startTime) / 1000));\n    }, 1000);\n  };\n\n  const stopSession = async () => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n    \n    // Stop attention tracking via API\n    await sendAPICommand('stop_tracking');\n    disconnectFromAPI();\n    \n    setIsSessionActive(false);\n    \n    // Calculate session duration in minutes\n    const durationMinutes = Math.floor(sessionDuration / 60);\n    \n    // Create session record with attention data\n    const session = {\n      id: `session-${Date.now()}`,\n      title: `${lastMethod ? lastMethod.replace('-', ' ') : 'Study'} Session`,\n      method: lastMethod || 'pomodoro',\n      completed: true,\n      minutes: durationMinutes,\n      dateISO: new Date().toISOString().split('T')[0],\n      createdAt: Date.now(),\n      attentionScore: Math.round(attentionData.attention_score * 100),\n      avgEyeAR: attentionData.eye_ar,\n      avgMouthAR: attentionData.mouth_ar,\n      phoneDetected: attentionData.phone_detected\n    };\n    \n    addSession(session);\n    \n    // Stop camera\n    stopCamera();\n    \n    // Redirect to progress page\n    router.push('/progress');\n  };\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Determine if user is distracted\n  // Only show popup when there's a clear distraction event, not just ambient detection\n  const isDistracted = attentionData.phone_detected && attentionData.focus_status === 'distracted';\n\n  return (\n    <main className=\"min-h-screen bg-[#fffbef] flex flex-col\">\n      {/* Focus Alert Popup - Temporarily disabled until algorithm is stable */}\n      {/* <FocusAlert isDistracted={isDistracted} /> */}\n      \n      {/* Header */}\n      <div className=\"bg-white border-b border-[rgba(63,64,63,0.08)] px-6 py-4\">\n        <div className=\"max-w-6xl mx-auto flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-2xl font-modular text-[#3f403f]\">\n              Focus Session\n            </h1>\n            <p className=\"text-sm font-norwester text-[#575b44]\">\n              {lastMethod ? lastMethod.replace('-', ' ').toUpperCase() : 'STUDY'} Method\n            </p>\n          </div>\n          \n          {isSessionActive && isClient && (\n            <div className=\"text-right\">\n              <div className=\"text-3xl font-modular text-[#939f5c]\">\n                {formatTime(sessionDuration)}\n              </div>\n              <div className=\"text-sm font-norwester text-[#575b44]\">\n                Session Time\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Camera Section */}\n      <div className=\"flex-1 flex flex-col items-center justify-center p-6\">\n        <div className=\"relative w-full max-w-4xl aspect-video bg-black rounded-2xl overflow-hidden shadow-lg\">\n          {isClient ? (\n            <video\n              ref={videoRef}\n              autoPlay\n              playsInline\n              muted\n              className=\"w-full h-full object-cover scale-x-[-1]\"\n            />\n          ) : (\n            <div className=\"w-full h-full flex items-center justify-center text-white\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl mb-2\">üìπ</div>\n                <div className=\"text-sm\">Loading Camera...</div>\n              </div>\n            </div>\n          )}\n          \n          {/* Overlay for computer vision indicators */}\n          <div className=\"absolute inset-0 pointer-events-none\">\n            {/* Connection status */}\n            <div className={`absolute top-4 left-4 px-3 py-1 rounded-full text-sm font-norwester ${\n              apiConnected ? 'bg-green-500 text-white' : 'bg-red-500 text-white'\n            }`}>\n              {apiConnected ? 'üîó AI Connected' : '‚ùå AI Disconnected'}\n            </div>\n            \n            {/* Computer vision tracking area */}\n            <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n              {/* Outer focus ring */}\n              <div className={`border-2 rounded-full opacity-50 ${\n                attentionData.focus_status === 'focused' ? 'border-green-400' : \n                attentionData.focus_status === 'distracted' ? 'border-red-400' : \n                'border-yellow-400'\n              }`} style={{\n                width: '1260px',\n                height: '700px',\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%, -50%)'\n              }}></div>\n              \n              {/* Inner focus area */}\n              <div className={`border border-white rounded-full opacity-30 ${\n                attentionData.focus_status === 'focused' ? 'border-green-300' : \n                attentionData.focus_status === 'distracted' ? 'border-red-300' : \n                'border-yellow-300'\n              }`} style={{\n                width: '1252px',\n                height: '692px',\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%, -50%)'\n              }}></div>\n            </div>\n            \n            {/* Real-time status indicators */}\n            <div className=\"absolute top-4 right-4 space-y-2\">\n              <div className={`px-2 py-1 rounded text-xs font-norwester ${\n                attentionData.focus_status === 'focused' ? 'bg-green-500 text-white' :\n                attentionData.focus_status === 'distracted' ? 'bg-red-500 text-white' :\n                'bg-yellow-500 text-white'\n              }`}>\n                {attentionData.focus_status === 'focused' ? '‚úÖ Focused' :\n                 attentionData.focus_status === 'distracted' ? '‚ùå Distracted' :\n                 '‚è≥ Analyzing...'}\n              </div>\n              \n              <div className=\"bg-blue-500 text-white px-2 py-1 rounded text-xs font-norwester\">\n                üëÅÔ∏è Eye AR: {attentionData.eye_ar.toFixed(2)}\n              </div>\n              \n              <div className=\"bg-purple-500 text-white px-2 py-1 rounded text-xs font-norwester\">\n                üß† Score: {Math.round(attentionData.attention_score * 100)}%\n              </div>\n              \n              {attentionData.phone_detected && (\n                <div className=\"bg-red-600 text-white px-2 py-1 rounded text-xs font-norwester\">\n                  üì± Phone Detected!\n                </div>\n              )}\n              \n              <div className=\"bg-gray-600 text-white px-2 py-1 rounded text-xs font-norwester\">\n                üìä FPS: {Math.round(attentionData.fps)}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Instructions */}\n        <div className=\"mt-8 text-center max-w-2xl\">\n          <h2 className=\"text-xl font-modular text-[#3f403f] mb-4\">\n            {isSessionActive ? 'Stay Focused!' : 'Ready to Start?'}\n          </h2>\n          <p className=\"text-[#575b44] font-norwester mb-6\">\n            {isSessionActive \n              ? 'Keep your eyes on the screen and maintain good posture. AI is tracking your focus, eye movement, and detecting distractions like phones.'\n              : apiConnected \n                ? 'Position yourself in front of the camera and click \"Start Session\" when you\\'re ready to begin. AI will track your attention in real-time.'\n                : 'AI attention tracking is not connected. Please start the Python server first.'\n            }\n          </p>\n        </div>\n      </div>\n\n      {/* Bottom Action Bar */}\n      <div className=\"bg-white border-t border-[rgba(63,64,63,0.08)] px-6 py-6\">\n        <div className=\"max-w-6xl mx-auto flex justify-center\">\n          {!isSessionActive ? (\n            <Button\n              onClick={startSession}\n              disabled={!apiConnected}\n              className={`font-modular px-8 py-4 text-lg rounded-2xl shadow-lg ${\n                apiConnected \n                  ? 'bg-[#939f5c] text-[#3f403f] hover:bg-[#808b4f]' \n                  : 'bg-gray-400 text-gray-600 cursor-not-allowed'\n              }`}\n            >\n              {apiConnected ? 'Start Session' : 'AI Not Connected'}\n            </Button>\n          ) : (\n            <Button\n              onClick={stopSession}\n              className=\"font-modular bg-red-500 text-white hover:bg-red-600 px-8 py-4 text-lg rounded-2xl shadow-lg\"\n            >\n              Stop Session\n            </Button>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}